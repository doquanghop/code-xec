# 1Ô∏è‚É£ S·ª≠ d·ª•ng base image c·ªßa Golang
FROM golang:1.24 AS builder

# 2Ô∏è‚É£ Thi·∫øt l·∫≠p th∆∞ m·ª•c l√†m vi·ªác trong container
WORKDIR /app

# 3Ô∏è‚É£ Copy go.mod v√† go.sum tr∆∞·ªõc ƒë·ªÉ c√†i dependencies (t·ªëi ∆∞u cache)
COPY go.mod go.sum ./
RUN go mod download

# 4Ô∏è‚É£ Copy to√†n b·ªô m√£ ngu·ªìn v√†o container
COPY . .

# 5Ô∏è‚É£ Bi√™n d·ªãch ·ª©ng d·ª•ng Go th√†nh binary
RUN go build -o execution-service .

# 6Ô∏è‚É£ S·ª≠ d·ª•ng m·ªôt image nh·ªè h∆°n ƒë·ªÉ ch·∫°y binary (gi·∫£m k√≠ch th∆∞·ªõc container)
FROM debian:bookworm-slim

# 7Ô∏è‚É£ Thi·∫øt l·∫≠p th∆∞ m·ª•c l√†m vi·ªác
WORKDIR /app

# 8Ô∏è‚É£ Copy binary t·ª´ builder sang image nh·ªè g·ªçn n√†y
COPY --from=builder /internal/app/execution-service .

# 9Ô∏è‚É£ M·ªü c·ªïng 8080 (ho·∫∑c c·ªïng b·∫°n ƒëang d√πng)
EXPOSE 8080

# üîü Ch·∫°y ·ª©ng d·ª•ng
CMD ["./execution-service"]


#docker build -t execution-service .
#
#docker run -p 8080:8080 execution-service